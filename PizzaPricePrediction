import pandas as pd
data=pd.read_csv('Pizza_v2.csv')
data.head()
data.tail()
data.shape
print("Number of Rows",data.shape[0])
print("Number of Columns",data.shape[1])
data.info()
data.isnull()
data.isnull().sum()
data.describe()
data.head()
data.rename({'price_rupiah':'price'},axis=1,inplace=True)
data.head()
data.info()
def convert(value):
 return value*0.0054
data['price'].apply(convert)
data['price']=data['price'].apply(convert)
data.head()
data['diameter']=data['diameter'].str.replace("inch","")
data['diameter']=data['diameter'].str.replace(" ","").astype('float32')
data.head()
data.columns
data['company'].value_counts()
import matplotlib.pyplot as plt
plt.hist(x="price",data=data)
plt.title("Price Distribution")
plt.show
x=data['diameter'].value_counts()
data.diameter.unique().size
import seaborn as sns
sns.countplot(data)
sns.countplot(x)
data['topping'].value_counts()
sns.countplot(data['topping'])
sns.countplot(data['variant'])
data['size'].value_counts()
sns.countplot(x=data['size'])
sns.countplot(x=data['extra_sauce'])
sns.countplot(x=data['extra_cheese'])
sns.countplot(x=data['extra_mushrooms'])
data.columns
sns.barplot(x='company', y='price', data=data)
data.columns
sns.boxplot(y='topping',x='price',data=data)
sns.boxplot(x='size',y='price',data=data)
data.columns
data['price'].max()
data[data['price'].max()==data['price']]
data.columns
data['size']=='jumbo
data[data['size']=='jumbo']['diameter'].head()
data[data['size']=='XL']['diameter'].head()
data[(data['size']=='jumbo') & (data['diameter']<=16)]
data=data.drop(data.index[[6,11,16,80]])
data[(data['size']=='jumbo') & (data['diameter']<=16)]
cat_cols=data.select_dtypes(include=['object']).columns
cat_cols
data.head()
from sklearn.preprocessing import LabelEncoder
en=LabelEncoder()
for i in cat_cols:
 data[i]=en.fit_transform(data[i])
data.head()
X = data.drop('price',axis=1)
Y = data['price']
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,Y,test_size=0.20,random_state=4
data.head()
!pip install xgboost
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import GradientBoostingRegressor
from xgboost import XGBRegressor
lr=LinearRegression()
lr.fit(X_train,y_train)
svm=SVR()
svm.fit(X_train,y_train)
rf=RandomForestRegressor()
rf.fit(X_train,y_train)
gbr=GradientBoostingRegressor()
gbr.fit(X_train,y_train)
xg=XGBRegressor()
xg.fit(X_train,y_train)
y_pred1=lr.predict(X_test)
y_pred2=svm.predict(X_test)
y_pred3=rf.predict(X_test)
y_pred4=gbr.predict(X_test)
y_pred5=xg.predict(X_test)
from sklearn import metrics
score1=metrics.r2_score(y_test,y_pred1)
score2=metrics.r2_score(y_test,y_pred2)
score3=metrics.r2_score(y_test,y_pred3)
score4=metrics.r2_score(y_test,y_pred4)
score5=metrics.r2_score(y_test,y_pred5)
print(score1,score2,score3,score4,score5)
final_data=pd.DataFrame({'Models':['LR','SVR','RF','GB','XGR'],'R2_SCORE':[score
final_data
import seaborn as sns
sns.barplot(x='Models', y='R2_SCORE', data=final_data)
rf.feature_importances_
pd.Series(rf.feature_importances_,index=X_train.columns)
fea=pd.Series(rf.feature_importances_,index=X_train.columns)
fea.plot(kind='barh')
gbr.feature_importances_
fea=pd.Series(gbr.feature_importances_,index=X_train.columns)
fea.plot(kind='barh')
xg.feature_importances_
fea=pd.Series(xg.feature_importances_,index=X_train.columns)
fea.plot(kind='barh')
X=data.drop('price',axis=1)
y=data['price']
xgb=XGBRegressor()
xgb.fit(X,y)
import joblib
joblib.dump(xgb,'pizza_price_predict')
model=joblib.load('pizza_price_predict')
df = pd.DataFrame({
 'company': 1,
 'diameter': 22.0,
 'topping': 2, 
 'variant': 8,
 'size': 1,
 'extra_sauce': 1,
 'extra_cheese': 1,
 'extra_mushrooms': 1
}, index=[0])
df
model.predict(df)
from tkinter import *
import joblib
import pandas as pd
def show_entry():
 
 p1 = float(e1.get())
 p2 = float(e2.get())
 p3 = float(e3.get())
 p4 = float(e4.get())
 p5 = float(e5.get())
 p6 = float(e6.get())
 p7 = float(e7.get())
 p8 = float(e8.get())
 model = joblib.load('pizza_price_model')
 df = pd.DataFrame({
 'company':p1,
 'diameter':p2,
 'topping':p3,
 'variant':p4,
 'size':p5,
 'extra_sauce':p6,
 'extra_cheese':p7,
 'extra_mushrooms':p8
},index=[0])
 result = model.predict(df)
 
 Label(master, text="Pizza Price is").grid(row=31)
 Label(master, text=result).grid(row=32)
 print("Pizza Price Prediction", result)
 
master =Tk()
master.title("Pizza Price Prediction Using Machine Learning")
label = Label(master,text = "Pizza Price Prediction",bg = "black",
 fg = "white").grid(row=0,columnspan=2)
Label(master,text = "Company Name").grid(row=1)
Label(master,text = "Enter Your Diameter of the Pizza").grid(row=2)
Label(master,text = "Topping").grid(row=3)
Label(master,text = "Variant").grid(row=4)
Label(master,text = "Size").grid(row=5)
Label(master,text = "extra_sauce [1:yes,0:No]").grid(row=6)
Label(master,text = "extra_cheese [1:yes,0:No] ").grid(row=7)
Label(master,text = "extra_mushrooms [1:yes,0:No]").grid(row=8)
e1 = Entry(master)
e2 = Entry(master)
e3 = Entry(master)
e4 = Entry(master)
e5 = Entry(master)
e6 = Entry(master)
e7 = Entry(master)
e8 = Entry(master)
e1.grid(row=1,column=1)
e2.grid(row=2,column=1)
e3.grid(row=3,column=1)
e4.grid(row=4,column=1)
e5.grid(row=5,column=1)
e6.grid(row=6,column=1)
e7.grid(row=7,column=1)
e8.grid(row=8,column=1)
Button(master,text="Predict",command=show_entry).grid()
mainloop()
